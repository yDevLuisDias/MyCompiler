State 15 conflicts: 4 shift/reduce
State 16 conflicts: 4 shift/reduce
State 17 conflicts: 4 shift/reduce
State 18 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | program line

    3 line: expr SEMICOLON
    4     | ID ASSIGN expr SEMICOLON

    5 expr: NUM
    6     | ID
    7     | expr PLUS expr
    8     | expr MINUS expr
    9     | expr TIMES expr
   10     | expr DIVIDE expr


Terminals, with rules where they appear

$end (0) 0
error (256)
NUM (258) 5
ID (259) 4 6
PLUS (260) 7
MINUS (261) 8
TIMES (262) 9
DIVIDE (263) 10
ASSIGN (264) 4
SEMICOLON (265) 3 4


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
program (12)
    on left: 1 2, on right: 0 2
line (13)
    on left: 3 4, on right: 2
expr (14)
    on left: 5 6 7 8 9 10, on right: 3 4 7 8 9 10


state 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    2 program: program . line

    $end  shift, and go to state 2
    NUM   shift, and go to state 3
    ID    shift, and go to state 4

    line  go to state 5
    expr  go to state 6


state 2

    0 $accept: program $end .

    $default  accept


state 3

    5 expr: NUM .

    $default  reduce using rule 5 (expr)


state 4

    4 line: ID . ASSIGN expr SEMICOLON
    6 expr: ID .

    ASSIGN  shift, and go to state 7

    $default  reduce using rule 6 (expr)


state 5

    2 program: program line .

    $default  reduce using rule 2 (program)


state 6

    3 line: expr . SEMICOLON
    7 expr: expr . PLUS expr
    8     | expr . MINUS expr
    9     | expr . TIMES expr
   10     | expr . DIVIDE expr

    PLUS       shift, and go to state 8
    MINUS      shift, and go to state 9
    TIMES      shift, and go to state 10
    DIVIDE     shift, and go to state 11
    SEMICOLON  shift, and go to state 12


state 7

    4 line: ID ASSIGN . expr SEMICOLON

    NUM  shift, and go to state 3
    ID   shift, and go to state 13

    expr  go to state 14


state 8

    7 expr: expr PLUS . expr

    NUM  shift, and go to state 3
    ID   shift, and go to state 13

    expr  go to state 15


state 9

    8 expr: expr MINUS . expr

    NUM  shift, and go to state 3
    ID   shift, and go to state 13

    expr  go to state 16


state 10

    9 expr: expr TIMES . expr

    NUM  shift, and go to state 3
    ID   shift, and go to state 13

    expr  go to state 17


state 11

   10 expr: expr DIVIDE . expr

    NUM  shift, and go to state 3
    ID   shift, and go to state 13

    expr  go to state 18


state 12

    3 line: expr SEMICOLON .

    $default  reduce using rule 3 (line)


state 13

    6 expr: ID .

    $default  reduce using rule 6 (expr)


state 14

    4 line: ID ASSIGN expr . SEMICOLON
    7 expr: expr . PLUS expr
    8     | expr . MINUS expr
    9     | expr . TIMES expr
   10     | expr . DIVIDE expr

    PLUS       shift, and go to state 8
    MINUS      shift, and go to state 9
    TIMES      shift, and go to state 10
    DIVIDE     shift, and go to state 11
    SEMICOLON  shift, and go to state 19


state 15

    7 expr: expr . PLUS expr
    7     | expr PLUS expr .
    8     | expr . MINUS expr
    9     | expr . TIMES expr
   10     | expr . DIVIDE expr

    PLUS    shift, and go to state 8
    MINUS   shift, and go to state 9
    TIMES   shift, and go to state 10
    DIVIDE  shift, and go to state 11

    PLUS      [reduce using rule 7 (expr)]
    MINUS     [reduce using rule 7 (expr)]
    TIMES     [reduce using rule 7 (expr)]
    DIVIDE    [reduce using rule 7 (expr)]
    $default  reduce using rule 7 (expr)


state 16

    7 expr: expr . PLUS expr
    8     | expr . MINUS expr
    8     | expr MINUS expr .
    9     | expr . TIMES expr
   10     | expr . DIVIDE expr

    PLUS    shift, and go to state 8
    MINUS   shift, and go to state 9
    TIMES   shift, and go to state 10
    DIVIDE  shift, and go to state 11

    PLUS      [reduce using rule 8 (expr)]
    MINUS     [reduce using rule 8 (expr)]
    TIMES     [reduce using rule 8 (expr)]
    DIVIDE    [reduce using rule 8 (expr)]
    $default  reduce using rule 8 (expr)


state 17

    7 expr: expr . PLUS expr
    8     | expr . MINUS expr
    9     | expr . TIMES expr
    9     | expr TIMES expr .
   10     | expr . DIVIDE expr

    PLUS    shift, and go to state 8
    MINUS   shift, and go to state 9
    TIMES   shift, and go to state 10
    DIVIDE  shift, and go to state 11

    PLUS      [reduce using rule 9 (expr)]
    MINUS     [reduce using rule 9 (expr)]
    TIMES     [reduce using rule 9 (expr)]
    DIVIDE    [reduce using rule 9 (expr)]
    $default  reduce using rule 9 (expr)


state 18

    7 expr: expr . PLUS expr
    8     | expr . MINUS expr
    9     | expr . TIMES expr
   10     | expr . DIVIDE expr
   10     | expr DIVIDE expr .

    PLUS    shift, and go to state 8
    MINUS   shift, and go to state 9
    TIMES   shift, and go to state 10
    DIVIDE  shift, and go to state 11

    PLUS      [reduce using rule 10 (expr)]
    MINUS     [reduce using rule 10 (expr)]
    TIMES     [reduce using rule 10 (expr)]
    DIVIDE    [reduce using rule 10 (expr)]
    $default  reduce using rule 10 (expr)


state 19

    4 line: ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 4 (line)
